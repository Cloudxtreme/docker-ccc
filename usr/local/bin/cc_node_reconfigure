#!/bin/bash

which uuid &>/dev/null || { echo "executable 'uuid' not found in PATH" 1>&2; exit 1; }
which ipcalc &>/dev/null || { echo "executable 'ipcalc' not found in PATH" 1>&2; exit 1; }

sourceconfig=/etc/sysconfig/cc

source $sourceconfig

test -z "$cc_nodesdir" && { echo "missing config parameter cc_nodesdir from $sourceconfig" 1>&2; exit 1; }
test -z "$cc_tftpdir" && { echo "missing config parameter cc_tftpdir from $sourceconfig" 1>&2; exit 1; }
test -z "$cc_serverkey" && { echo "missing config parameter cc_serverkey from $sourceconfig" 1>&2; exit 1; }
test -z "$cc_imagesdir" && { echo "missing config parameter cc_imagesdir from $sourceconfig" 1>&2; exit 1; }
test -z "$cc_serveripdata" && { echo "missing config parameter cc_serveripdata from $sourceconfig" 1>&2; exit 1; }

cc_serverip=${cc_serveripdata%/*}

test -z "$cc_serverip" && { echo "failed to extract cc_serverip from $cc_serveripdata" 1>&2; exit 1; }

node_arptype=${cc_arptype:-01}

node_macaddr=${1:?"node mac address not specified"}

cc_node "$node_macaddr" -v || exit 1

source "$cc_nodesdir/$node_macaddr"

tmp_file="$cc_tftpdir/.cc.tmp.$node_arptype-$node_macaddr.$(uuid)"

cat>"$tmp_file"<<EEOOFF
default images/$node_macaddr/$node_channel/$node_version/coreos_production_pxe.vmlinuz
append initrd=images/$node_macaddr/$node_channel/$node_version/coreos_production_pxe_image.cpio.gz coreos.autologin cloud-config-url=http://$cc_serverip/config/$node_macaddr/cloud-config.yml sshkey="$cc_serverkey"
EEOOFF

test $? -eq 0 || { echo "failed to create '$tmp_file'" 1>&2; exit 1; }

if ! cmp "$tmp_file" "$cc_tftpdir/$node_arptype-$node_macaddr" &>/dev/null
then
 /bin/mv "$tmp_file" "$cc_tftpdir/$node_arptype-$node_macaddr"
 test $? -eq 0 || { echo "failed to create '$cc_tftpdir/$node_arptype-$node_macaddr'" 1>&2; exit 1; }
fi

tmp_file="$cc_tftpdir/../config/$node_macaddr/.cc.tmp.cloud-config.yml.$(uuid)"

mkdir -p "$cc_tftpdir/../config/$node_macaddr/" && \
cat>"$tmp_file"<<EEOOFF
#cloud-config
hostname: $node_hostname
coreos:
  units:
    - name: etcd.service
      command: start
    - name: fleet.service
      command: start
EEOOFF
        
test $? -eq 0 || { echo "failed to create '$tmp_file'" 1>&2; exit 1; }

if ! cmp "$tmp_file" "$cc_tftpdir/../config/$node_macaddr/cloud-config.yml" &>/dev/null
then
	/bin/mv "$tmp_file" "$cc_tftpdir/../config/$node_macaddr/cloud-config.yml"
        test $? -eq 0 || { echo "failed to create '$cc_tftpdir/../config/$node_macaddr/cloud-config.yml'" 1>&2; exit 1; }
fi

if ! service httpd status &>/dev/null
then
	service httpd restart || { echo "failed to start httpd" 1>&2; exit 1; }
fi

node_channel=${node_coreosversion%:*}
node_version=${node_coreosversion##*:}
test "$node_version" = "$node_coreosversion" && node_version=current


(
  mkdir -p "$cc_tftpdir/../images/$node_macaddr/$node_channel/$node_version" && \
  cd "$cc_tftpdir/../images/$node_macaddr/$node_channel/$node_version" && \
  ln -f "$cc_imagesdir/$node_channel/$node_version/coreos_production_pxe.vmlinuz" && \
  ln -f "$cc_imagesdir/$node_channel/$node_version/coreos_production_pxe.vmlinuz.sig" && \
  ln -f "$cc_imagesdir/$node_channel/$node_version/coreos_production_pxe_image.cpio.gz" && \
  ln -f "$cc_imagesdir/$node_channel/$node_version/coreos_production_pxe_image.cpio.gz.sig" \
)

test $? -eq 0 || { echo "failed to link files in '$cc_imagesdir/$node_channel/$node_version'" 1>&2; exit 1; }

cc_dhcpd_reconfigure
